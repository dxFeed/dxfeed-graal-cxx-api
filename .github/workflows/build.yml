# SPDX-License-Identifier: MPL-2.0

name: CI

on:
  push:
    tags:
      - '[0-9]+\.[0-9]+\.[0-9]+'
      - '[0-9]+\.[0-9]+\.[0-9]+-[a-zA-Z]+'
      - '[a-zA-Z]+-[0-9]+\.[0-9]+\.[0-9]+'
    branches:
      - 'main'
  pull_request:
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: 'Release'

jobs:
  build:
    strategy:
      matrix:
        #        os: [windows-latest, macos-latest, ubuntu-latest]
        os: [ windows-latest, macos-latest, ubuntu-22.04 ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: turtlebrowser/get-conan@main

      - name: Conan version
        run: echo "${{ steps.conan.outputs.version }}"

      - name: Prepare build
        run: |
          ls
          mkdir ${{github.workspace}}/build    

      - name: Prepare conan [Linux]
        if: runner.os == 'Linux'
        run: |
          cd ${{github.workspace}}/build
          conan install -s compiler.libcxx=libstdc++11 ..

      - name: Prepare conan [Win]
        if: runner.os == 'Windows'
        run: |
          cd ${{github.workspace}}/build
          conan install -s compiler.version=16 ..

      - name: Prepare conan [macOS]
        if: runner.os == 'macOS'
        run: |
          cd ${{github.workspace}}/build
          conan install --build=catch2 --build=fmt ..

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{env.BUILD_TYPE}} --extra-verbose
      
